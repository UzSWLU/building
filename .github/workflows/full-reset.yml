name: 🔴 Full Building API Reset

on:
  workflow_dispatch: # Manual trigger only
    inputs:
      confirm:
        description: 'Type "RESET" to confirm data deletion'
        required: true
        default: ''

jobs:
  confirm-reset:
    runs-on: ubuntu-latest
    steps:
      - name: ⚠️  Validate confirmation
        run: |
          if [ "${{ github.event.inputs.confirm }}" != "RESET" ]; then
            echo "❌ Confirmation failed! You must type 'RESET' to proceed."
            exit 1
          fi
          echo "✅ Confirmation received. Proceeding with full reset..."

  full-reset:
    needs: confirm-reset
    runs-on: [self-hosted, Linux, X64]
    timeout-minutes: 10
    steps:
      - name: 📋 Display reset information
        run: |
          echo "🔴 =============================================="
          echo "🔴 FULL BUILDING API RESET"
          echo "🔴 All data will be deleted and recreated!"
          echo "🔴 =============================================="

      - name: 🔧 Ensure environment variables
        run: |
          cd /var/www/building-api

          echo "🔍 Checking .env.production..."
          if [ ! -f .env.production ]; then
            echo "📝 Creating .env.production from template..."
            cp env.prod.example .env.production
          fi

          # Ensure OAuth URLs are configured
          sed -i '/^BACKEND_URL=/d' .env.production
          sed -i '/^FRONTEND_CALLBACK_URL=/d' .env.production
          sed -i '/^# OAuth URLs/d' .env.production

          echo "" >> .env.production
          echo "# OAuth URLs" >> .env.production
          echo "BACKEND_URL=https://auth.uzswlu.uz" >> .env.production
          echo "FRONTEND_CALLBACK_URL=https://building.swagger.uzswlu.uz/callback,http://localhost:5001/callback" >> .env.production

          echo "✅ Environment configured:"
          grep -E "BACKEND_URL|FRONTEND_CALLBACK_URL" .env.production

      - name: 🔄 Execute full reset
        run: |
          cd /var/www/building-api

          echo "🛑 Stopping all containers..."
          docker-compose -f docker-compose.prod.yml down -v

          echo "🗑️ Removing all volumes and images..."
          docker volume prune -f
          docker image prune -f

          echo "🔨 Rebuilding from scratch..."
          docker-compose -f docker-compose.prod.yml build --no-cache
          docker-compose -f docker-compose.prod.yml up -d

          echo "⏳ Waiting for services to start..."
          sleep 60

      - name: 🗄️ Initialize database
        run: |
          cd /var/www/building-api

          echo "🗄️ Running migrations..."
          docker-compose -f docker-compose.prod.yml exec -T web python manage.py migrate

          echo "👤 Creating superuser..."
          docker-compose -f docker-compose.prod.yml exec -T web python manage.py shell -c "
          from django.contrib.auth import get_user_model
          User = get_user_model()
          if not User.objects.filter(username='admin').exists():
              User.objects.create_superuser('admin', 'admin@uzswlu.uz', 'admin123')
              print('Superuser created: admin/admin123')
          else:
              print('Superuser already exists')
          "

          echo "📊 Collecting static files..."
          docker-compose -f docker-compose.prod.yml exec -T web python manage.py collectstatic --noinput

      - name: 📊 Display final status
        if: always()
        run: |
          echo ""
          echo "📊 Container Status:"
          docker-compose -f /var/www/building-api/docker-compose.prod.yml ps

      - name: 📝 Display API logs
        if: always()
        run: |
          echo ""
          echo "📝 Recent API Logs:"
          docker-compose -f /var/www/building-api/docker-compose.prod.yml logs --tail=50 web

      - name: 🔍 Test API health
        run: |
          echo ""
          echo "🔍 Testing API health..."
          sleep 10
          curl -s https://building.swagger.uzswlu.uz/health/ || echo "⚠️ Health check failed"

      - name: ✅ Reset completed
        run: |
          echo ""
          echo "✅ =============================================="
          echo "✅ FULL RESET COMPLETED SUCCESSFULLY!"
          echo "✅ =============================================="
          echo ""
          echo "🔗 API: https://building.swagger.uzswlu.uz/"
          echo "🔗 Swagger UI: https://building.swagger.uzswlu.uz/"
          echo "🔗 Health: https://building.swagger.uzswlu.uz/health/"
          echo "🔗 Admin: https://building.swagger.uzswlu.uz/admin/"
          echo ""
          echo "👤 Default Admin:"
          echo "   Username: admin"
          echo "   Password: admin123"
